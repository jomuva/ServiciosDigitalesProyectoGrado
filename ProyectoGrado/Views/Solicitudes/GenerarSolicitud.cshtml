@using ServiciosDigitalesProy.Models
@model ServiciosDigitalesProy.Models.Solicitud

@{
    ViewBag.Title = "Solicitudes";
    ViewBag.SubSeccion = "Generar Solicitud";
}

<h3>@ViewBag.SubSeccion</h3>
<div class="col-lg-12">
    <!--breadcrumbs start -->
    <ul class="breadcrumb">
        <li><a href="#"><i class="fa fa-th-list"></i>@ViewBag.Title</a></li>
        <li class="active"><a href="#">@ViewBag.SubSeccion</a></li>
    </ul>
    <!--breadcrumbs end -->
</div>
<style>
    .form-horizontal .control-label {
    text-align: left;
    }
</style>
@Html.Partial("Partials/_Modal")

@using (Html.BeginForm("GenerarSolicitud", "Solicitudes"))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal col-md-10 col-md-offset-1" style="border-style: solid;">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group">
                <div class="col-md-3 col-md-offset-2">
                    <a id="btnElemento" data-toggle="modal" href="#miModal" class="btn btn-warning btn-lg">Elementos</a>
                </div>

                @Html.Label("id Elemento :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.EditorFor(model => model.elemento.id_elemento, new { htmlAttributes = new { @class = "form-control", placeholder = "Id Elemento", @readonly = "readonly" } })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                @Html.Label("Servicios:", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.DropDownListFor(x => x.servicio.id_servicio, Model.ListaServiciosSelect, null, new { @class = "form-control" })
                    </div>
                </div>
                @Html.Label("Clientes:", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-5 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.DropDownListFor(x => x.cliente.id, Model.ListaClientesSelect, null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.Label("Prioridad:", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.DropDownListFor(x => x.prioridadSolicitud.id, Model.prioridadSolicitudSelect, null, new { @class = "form-control" })
                    </div>
                </div>
                @Html.Label("Estado:", htmlAttributes: new { @class = "control-label col-md-1" })
                <div class="col-md-3 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.DropDownListFor(x => x.estadoSolicitud.id, Model.estadoSolicitudSelect, null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.Label("Descripción :", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                        @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control", placeholder = "Descripción", @minlength = "6", @type = "text" } })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" id="Generar" value="Generar" class="btn btn-success" />
            </div>
            <div class="col-md-2">
                @Html.ActionLink("Volver", "", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}
@if ((string)TempData["mensaje"] != null || (string)TempData["mensaje"] != "")
            {
    <script>
        $(function (msg) {
            $.bootstrapGrowl('@((string)TempData["mensaje"])', {
                type: '@((string)TempData["estado"])',
                offset: { from: 'top', amount: 100 }
            });
        });
    </script>
}

@section Scripts {
    <script src="~/Xcore/Scripts/Modales/ModalElemento.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}
