@using ServiciosDigitalesProy.Models
@model ServiciosDigitalesProy.Models.Sucursal


@{
    ViewBag.Title = "Sucursal";
    ViewBag.SubSeccion = "Crear Sucursal";
}

<h3>@ViewBag.SubSeccion</h3>
<div class="row">
    <div class="col-lg-12">
        <!--breadcrumbs start -->
        <ul class="breadcrumb">
            <li><a href="#"><i class="fa fa-th-list"></i>@ViewBag.Title</a></li>
            <li class="active"><a href="#">@ViewBag.SubSeccion</a></li>
        </ul>
        <!--breadcrumbs end -->
    </div>

    @using (Html.BeginForm("AgregarSucursal", "Inventarios"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-8 col-md-offset-1">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Nombre :*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-book"></i></span>
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.Label("Dirección :*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-money"></i></span>
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Ciudad :*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-money"></i></span>
                        @Html.EditorFor(model => model.ciudad, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.ciudad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Teléfono Fijo :*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-map-marker"></i></span>
                        @Html.EditorFor(model => model.telefonoFijo, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.telefonoFijo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Teléfono Celular :*", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-sitemap"></i></span>
                        @Html.EditorFor(model => model.telfonoCelular, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-3 col-md-2">
                    <input type="submit" id="Aceptar" value="Crear" class="btn btn-success" />
                </div>
            </div>

        </div>
    }
</div>
@if ((string)TempData["mensaje"] != null || (string)TempData["mensaje"] != "")
{
    <script>
        $(function (msg) {
            $.bootstrapGrowl('@((string)TempData["mensaje"])', {
                type: '@((string)TempData["estado"])',
                offset: { from: 'top', amount: 100 }
            });
        });
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
