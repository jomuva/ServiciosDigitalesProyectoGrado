@model ServiciosDigitalesProy.Models.Factura

@{
    ViewBag.Title = " Ventas";
    ViewBag.SubSeccion = "Ver Detalle Factura No: " + ViewBag.idFactura;
}

<h3>@ViewBag.SubSeccion</h3>
<div class="col-lg-12">
    <!--breadcrumbs start -->
    <ul class="breadcrumb">
        <li style="color: #3060c3;"><i class="fa fa-th-list"></i>@ViewBag.Title</li>
        <li class="active">@ViewBag.SubSeccion</li>
    </ul>
    <!--breadcrumbs end -->
</div>
<style>
    .form-horizontal .control-label {
        text-align: left;
    }

    textarea {
        width: 400px;
        height: 100px;
    }

    a {
        color: #c72a2a;
        text-decoration: none;
    }

    .breadcrumb > .active {
        color: #3060c3;
    }
</style>

<div class="row">

    <!-- /.INICIO DE ENCABEZADO FACTURA -->

    @Html.AntiForgeryToken()
    <div class="col-md-6 col-md-offset-5" style="text-align: right;">
        @Html.ActionLink("Ver Histórico", "ConsultarHistoricoFacturaXid", new { id = Model.id_factura}, new { @class = "btn btn-danger" })
    </div>
    <div class="form-horizontal col-md-10 col-md-offset-1" style="border-style: solid;margin-top: 10px;">
        <section class="panel">

            <header>
                <div class="row" style="margin-top: 10px;">
                    @Html.Label("Factura No:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-ticket"></i></span>
                            @Html.EditorFor(model => model.id_factura, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    @Html.Label("Fecha:", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-calendar-o"></i></span>
                            @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top: 10px;">
                    @Html.Label("Doc Cliente:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-credit-card"></i></span>
                            @Html.EditorFor(model => model.cliente.identificacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    @Html.Label("Nombre:", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                            @Html.EditorFor(model => model.cliente.NombresApellidos, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top: 10px;">
                    @Html.Label("Celular:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                            @Html.EditorFor(model => model.cliente.TelefonoCelular, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    @Html.Label("Dirección:", htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-qrcode"></i></span>
                            @Html.EditorFor(model => model.cliente.direccion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        </div>
                    </div>
                </div>
            </header>
        </section>
    </div>
    <!-- /.FIN DE ENCABEZADO FACTURA -->
    <!-- INICIO SECCION ITEMS PRODUCTO-->


    <div class="form-horizontal col-md-10 col-md-offset-1" style="border-style: solid;">
        <div class="panel-body">

            <table class="table table-striped table-bordered table-hover" id="table-inicial">

                <thead>
                    <tr>
                        <td style="width: 1px;">
                            <b>Cantidad</b>
                        </td>
                        <td>
                            <b>Descripción</b>
                        </td>
                        <td>
                            <b>Valor Unitario</b>
                        </td>
                        <td>
                            <b>Subtotal</b>
                        </td>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.listaDetallesProducto.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.EditorFor(model => this.Model.listaDetallesProducto[i].cantidad, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesProducto[i].producto.nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesProducto[i].producto.precio_venta, new { htmlAttributes = new { style = "width: 100px;" } })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesProducto[i].subtotal)
                            </td>
                        </tr>
                    }
                    @for (int i = 0; i < Model.listaDetallesSolicitud.Count; i++)
                    {
                        <tr>
                            <td></td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesSolicitud[i].solicitud.servicio.descripcion)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesSolicitud[i].solicitud.servicio.precio, new { htmlAttributes = new { style = "width: 100px;" } })
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => this.Model.listaDetallesSolicitud[i].solicitud.servicio.precio, new { htmlAttributes = new { style = "width: 100px;" } })
                            </td>
                        </tr>
                    }

                </tbody>
            </table>

        </div>
    </div>
    <!--FIN SECCION ITEMS PRODUCTO-->
    <section>
        <div class="row" style="margin-left: 650px;margin-bottom:10px">
            @Html.Label("Total:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4 inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-money"></i></span>
                    <b> @Html.TextBoxFor(model => model.total, "{0:c}", new { @class = "form-control required numeric", @readonly = "readonly", @style = "background-color: #f5baba;" })</b>
                </div>
            </div>
        </div>
        <div class="row" style="margin-left: 650px;margin-bottom:10px">
            @Html.Label("Saldo Pendiente:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-4 inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-money"></i></span>

                    <b> @Html.EditorFor(model => this.Model.valorPagado, "{0:c}", new { htmlAttributes = new { @class = "form-control required numeric", @type = "number" } })</b>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="form-group" style="padding-right: 30px;margin-top: 10px;">
                
                <div class="col-md-4 pull-right" style="padding-left: 0px;">
                    @Html.ActionLink("Volver", "ConsultarFacturas", null, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    </section>
</div>
@section Scripts {
    <script src="~/Xcore/Scripts/Modales/ModalElemento.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
}

@if ((string)TempData["mensaje"] != null && (string)TempData["mensaje"] != "")
            {
    <script>
        $(function (msg) {
            $.bootstrapGrowl('@((string)TempData["mensaje"])', {
                type: '@((string)TempData["estado"])',
                offset: { from: 'top', amount: 100 }
            });
        });
    </script>
}
