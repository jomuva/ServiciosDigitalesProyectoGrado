@using ServiciosDigitalesProy.Models
@model ServiciosDigitalesProy.Models.Usuario

@{
    ViewBag.Title = "Usuarios";
    ViewBag.SubSeccion = "Modificar Empleado";
}

<h3>@ViewBag.SubSeccion</h3>
<div class="row">
    <div class="col-lg-12">
        <!--breadcrumbs start -->
        <ul class="breadcrumb">
            <li><a href="#"><i class="fa fa-th-list"></i>@ViewBag.Title</a></li>
            <li class="active"><a href="#">@ViewBag.SubSeccion</a></li>
        </ul>
        <!--breadcrumbs end -->
    </div>

    @using (Html.BeginForm("UpdateEmpleado", "Usuarios"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-8 col-md-offset-2">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group">
                    @Html.Label("Nombres :*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                            @Html.EditorFor(model => model.nombres, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombres", type = "text" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("Apellidos :*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                            @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control", placeholder = "Apellidos", type = "text" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Tipo de Id :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                            @Html.DropDownListFor(x => x.idTipoIdentificacion, Model.tiposIdentificacion, null, new { @class = "form-control" })
                        </div>
                    </div>
                    @Html.Label("Id :*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-tasks"></i></span>
                            @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control", placeholder = "Identificación", @minlength = "6", @readonly="readonly", @type = "number" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Rol :*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-home"></i></span>
                            @Html.DropDownListFor(x => x.idRol, Model.Roles, null, new { @class = "form-control" })
                        </div>
                    </div>
                    @Html.Label("Sucursal :*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-home"></i></span>
                            @Html.DropDownListFor(x => x.sucursal.id_sucursal, Model.sucursalesSelect, null, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    @Html.Label("Dirección :", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-home"></i></span>
                            @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Username:*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-users"></i></span>
                            @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    @Html.Label("Email:*", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @email = "email", @readonly="readonly" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Campos Radio Button Real y Contable : START-->
            <div class="row">
                <div class="form-group">
                    <label class="control-label col-md-2">Sexo : </label>
                    <div class="col-md-4 col-sm-2 col-xs-12">
                        @Html.RadioButtonFor(m => m.sexo, "M", new { @Checked = "checked" })
                        <label class="control-label ">Masculino </label>
                    </div>
                    <div class="col-md-4 col-sm-2 col-xs-12">
                        @Html.RadioButtonFor(m => m.sexo, "F")
                        <label class="control-label ">Femenino </label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group">
                    @Html.Label("Teléfono Fijo :", htmlAttributes: new { @class = "control-label col-md-2", type = "password" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-phone-square"></i></span>
                            @Html.EditorFor(model => model.TelefonoFijo, new { htmlAttributes = new { @class = "form-control", @maxlength = "7" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.TelefonoFijo, "", new { @class = "text-danger" })
                    </div>
                    @Html.Label("Teléfono Celular :*", htmlAttributes: new { @class = "control-label col-md-2", type = "password" })
                    <div class="col-md-4 inputGroupContainer">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-mobile"></i></span>
                            @Html.EditorFor(model => model.TelefonoCelular, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.TelefonoCelular, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-2">
                    <input type="submit" value="Modificar" class="btn btn-success" />
                </div>
                <div class="col-md-2">
                    @Html.ActionLink("Volver", "VolverDetallesEmpleado", new { id = Model.identificacion }, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
            

    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
