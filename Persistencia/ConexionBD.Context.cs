//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persistencia
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bdServiciosDigitalesProyEntities2 : DbContext
    {
        public bdServiciosDigitalesProyEntities2()
            : base("name=bdServiciosDigitalesProyEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATEGORIA_ELEMENTO> CATEGORIA_ELEMENTO { get; set; }
        public virtual DbSet<DETALLE_FACTURA_PRODUCTO> DETALLE_FACTURA_PRODUCTO { get; set; }
        public virtual DbSet<DETALLE_FACTURA_SOLICITUD> DETALLE_FACTURA_SOLICITUD { get; set; }
        public virtual DbSet<ELEMENTO> ELEMENTO { get; set; }
        public virtual DbSet<ESCALADO> ESCALADO { get; set; }
        public virtual DbSet<ESTADO_FACTURA> ESTADO_FACTURA { get; set; }
        public virtual DbSet<ESTADO_PRODUCTO> ESTADO_PRODUCTO { get; set; }
        public virtual DbSet<ESTADO_SOLICITUD> ESTADO_SOLICITUD { get; set; }
        public virtual DbSet<ESTADO_USUARIO> ESTADO_USUARIO { get; set; }
        public virtual DbSet<FACTURA> FACTURA { get; set; }
        public virtual DbSet<HISTORICO_SOLICITUD> HISTORICO_SOLICITUD { get; set; }
        public virtual DbSet<INVENTARIO> INVENTARIO { get; set; }
        public virtual DbSet<PERMISO> PERMISO { get; set; }
        public virtual DbSet<PRIORIDAD> PRIORIDAD { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<SERVICIO> SERVICIO { get; set; }
        public virtual DbSet<SOLICITUD> SOLICITUD { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TELEFONO_USUARIO> TELEFONO_USUARIO { get; set; }
        public virtual DbSet<TIPO_ELEMENTO> TIPO_ELEMENTO { get; set; }
        public virtual DbSet<TIPO_IDENTIFICACION_USUARIO> TIPO_IDENTIFICACION_USUARIO { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
    
        public virtual int ActualizarEstadoSolicitud_Automatico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoSolicitud_Automatico");
        }
    
        public virtual int ActualizarProducto(Nullable<int> idProd, string nombre_prod, Nullable<decimal> precio_costo, Nullable<decimal> precio_venta)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var nombre_prodParameter = nombre_prod != null ?
                new ObjectParameter("nombre_prod", nombre_prod) :
                new ObjectParameter("nombre_prod", typeof(string));
    
            var precio_costoParameter = precio_costo.HasValue ?
                new ObjectParameter("precio_costo", precio_costo) :
                new ObjectParameter("precio_costo", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", idProdParameter, nombre_prodParameter, precio_costoParameter, precio_ventaParameter);
        }
    
        public virtual int ActualizarServicio(Nullable<int> idserv, string descripc)
        {
            var idservParameter = idserv.HasValue ?
                new ObjectParameter("idserv", idserv) :
                new ObjectParameter("idserv", typeof(int));
    
            var descripcParameter = descripc != null ?
                new ObjectParameter("descripc", descripc) :
                new ObjectParameter("descripc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarServicio", idservParameter, descripcParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarElemento(Nullable<int> id_categ, Nullable<int> id_tipo_elem, string serial, string placa, string modelo, string marca, string ram, string rom, string serial_bateria, string sO)
        {
            var id_categParameter = id_categ.HasValue ?
                new ObjectParameter("id_categ", id_categ) :
                new ObjectParameter("id_categ", typeof(int));
    
            var id_tipo_elemParameter = id_tipo_elem.HasValue ?
                new ObjectParameter("id_tipo_elem", id_tipo_elem) :
                new ObjectParameter("id_tipo_elem", typeof(int));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var ramParameter = ram != null ?
                new ObjectParameter("ram", ram) :
                new ObjectParameter("ram", typeof(string));
    
            var romParameter = rom != null ?
                new ObjectParameter("rom", rom) :
                new ObjectParameter("rom", typeof(string));
    
            var serial_bateriaParameter = serial_bateria != null ?
                new ObjectParameter("serial_bateria", serial_bateria) :
                new ObjectParameter("serial_bateria", typeof(string));
    
            var sOParameter = sO != null ?
                new ObjectParameter("SO", sO) :
                new ObjectParameter("SO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarElemento", id_categParameter, id_tipo_elemParameter, serialParameter, placaParameter, modeloParameter, marcaParameter, ramParameter, romParameter, serial_bateriaParameter, sOParameter);
        }
    
        public virtual int AgregarServicio(string descripc)
        {
            var descripcParameter = descripc != null ?
                new ObjectParameter("descripc", descripc) :
                new ObjectParameter("descripc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarServicio", descripcParameter);
        }
    
        public virtual int AgregarUsuario(Nullable<int> tipoIdent, Nullable<int> estado, Nullable<int> rol, string identif, string apellidos, string nombres, string direccion, string correo, string sexo, string username, string passwd)
        {
            var tipoIdentParameter = tipoIdent.HasValue ?
                new ObjectParameter("tipoIdent", tipoIdent) :
                new ObjectParameter("tipoIdent", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("Passwd", passwd) :
                new ObjectParameter("Passwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarUsuario", tipoIdentParameter, estadoParameter, rolParameter, identifParameter, apellidosParameter, nombresParameter, direccionParameter, correoParameter, sexoParameter, usernameParameter, passwdParameter);
        }
    
        public virtual int CambiarEstadoProducto(Nullable<int> idProd, Nullable<int> idEstado)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoProducto", idProdParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CambiarEstadoSolicitud(Nullable<int> idSolicit, Nullable<int> idEstadoAnterior, Nullable<int> idEstadoNuevo, string identifEmpleado)
        {
            var idSolicitParameter = idSolicit.HasValue ?
                new ObjectParameter("idSolicit", idSolicit) :
                new ObjectParameter("idSolicit", typeof(int));
    
            var idEstadoAnteriorParameter = idEstadoAnterior.HasValue ?
                new ObjectParameter("idEstadoAnterior", idEstadoAnterior) :
                new ObjectParameter("idEstadoAnterior", typeof(int));
    
            var idEstadoNuevoParameter = idEstadoNuevo.HasValue ?
                new ObjectParameter("idEstadoNuevo", idEstadoNuevo) :
                new ObjectParameter("idEstadoNuevo", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CambiarEstadoSolicitud", idSolicitParameter, idEstadoAnteriorParameter, idEstadoNuevoParameter, identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<string> ConsultaNombresEmpleadosXSolicitud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultaNombresEmpleadosXSolicitud");
        }
    
        public virtual ObjectResult<Nullable<int>> Consultar_id_UsuarioXIdentificacion(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Consultar_id_UsuarioXIdentificacion", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarCategorias_Elemento_Result> ConsultarCategorias_Elemento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategorias_Elemento_Result>("ConsultarCategorias_Elemento");
        }
    
        public virtual ObjectResult<ConsultarElementos_Result> ConsultarElementos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarElementos_Result>("ConsultarElementos");
        }
    
        public virtual ObjectResult<ConsultarEstado_Solicitud_Result> ConsultarEstado_Solicitud(Nullable<int> idSolic)
        {
            var idSolicParameter = idSolic.HasValue ?
                new ObjectParameter("idSolic", idSolic) :
                new ObjectParameter("idSolic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstado_Solicitud_Result>("ConsultarEstado_Solicitud", idSolicParameter);
        }
    
        public virtual ObjectResult<ConsultarEstadosSolicitud_Result> ConsultarEstadosSolicitud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstadosSolicitud_Result>("ConsultarEstadosSolicitud");
        }
    
        public virtual ObjectResult<ConsultarPermisosXUsuario_Result> ConsultarPermisosXUsuario(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPermisosXUsuario_Result>("ConsultarPermisosXUsuario", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarProductos_Result> ConsultarProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductos_Result>("ConsultarProductos");
        }
    
        public virtual ObjectResult<ConsultarProductoXCodigo_Result> ConsultarProductoXCodigo(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductoXCodigo_Result>("ConsultarProductoXCodigo", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductoXNombre_Result> ConsultarProductoXNombre(string nombr)
        {
            var nombrParameter = nombr != null ?
                new ObjectParameter("nombr", nombr) :
                new ObjectParameter("nombr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductoXNombre_Result>("ConsultarProductoXNombre", nombrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarRolUsuario(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarRolUsuario", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarServicio_Result> ConsultarServicio(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarServicio_Result>("ConsultarServicio", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarServicios_Result> ConsultarServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarServicios_Result>("ConsultarServicios");
        }
    
        public virtual ObjectResult<ConsultarSolicitudes_Result> ConsultarSolicitudes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSolicitudes_Result>("ConsultarSolicitudes");
        }
    
        public virtual ObjectResult<ConsultarSolicitudesXEmpleado_Result> ConsultarSolicitudesXEmpleado(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSolicitudesXEmpleado_Result>("ConsultarSolicitudesXEmpleado", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarTiposElemento_Result> ConsultarTiposElemento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposElemento_Result>("ConsultarTiposElemento");
        }
    
        public virtual ObjectResult<ConsultarTiposPrioridad_Result> ConsultarTiposPrioridad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposPrioridad_Result>("ConsultarTiposPrioridad");
        }
    
        public virtual int EscalarSolicitud(Nullable<int> id_solicitud, string identifEmpleado)
        {
            var id_solicitudParameter = id_solicitud.HasValue ?
                new ObjectParameter("id_solicitud", id_solicitud) :
                new ObjectParameter("id_solicitud", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EscalarSolicitud", id_solicitudParameter, identifEmpleadoParameter);
        }
    
        public virtual int GenerarSolicitud(Nullable<int> id_prioridad, Nullable<int> id_estado, string identifEmpleado, Nullable<int> id_cliente, Nullable<int> id_servicio, Nullable<int> id_elemento, string descripcion)
        {
            var id_prioridadParameter = id_prioridad.HasValue ?
                new ObjectParameter("id_prioridad", id_prioridad) :
                new ObjectParameter("id_prioridad", typeof(int));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("id_estado", id_estado) :
                new ObjectParameter("id_estado", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var id_elementoParameter = id_elemento.HasValue ?
                new ObjectParameter("id_elemento", id_elemento) :
                new ObjectParameter("id_elemento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarSolicitud", id_prioridadParameter, id_estadoParameter, identifEmpleadoParameter, id_clienteParameter, id_servicioParameter, id_elementoParameter, descripcionParameter);
        }
    
        public virtual int InsertarProducto(Nullable<int> id_estado_prod, string nombre_prod, Nullable<decimal> precio_costo, Nullable<decimal> precio_venta, Nullable<int> cantidad)
        {
            var id_estado_prodParameter = id_estado_prod.HasValue ?
                new ObjectParameter("id_estado_prod", id_estado_prod) :
                new ObjectParameter("id_estado_prod", typeof(int));
    
            var nombre_prodParameter = nombre_prod != null ?
                new ObjectParameter("nombre_prod", nombre_prod) :
                new ObjectParameter("nombre_prod", typeof(string));
    
            var precio_costoParameter = precio_costo.HasValue ?
                new ObjectParameter("precio_costo", precio_costo) :
                new ObjectParameter("precio_costo", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarProducto", id_estado_prodParameter, nombre_prodParameter, precio_costoParameter, precio_ventaParameter, cantidadParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> ValidarAutenticacionLogin(string username, string passwd)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("passwd", passwd) :
                new ObjectParameter("passwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarAutenticacionLogin", usernameParameter, passwdParameter);
        }
    
        public virtual ObjectResult<ConsultarHistoricoSolicitudX_id_Result> ConsultarHistoricoSolicitudX_id(Nullable<int> id_solicitud)
        {
            var id_solicitudParameter = id_solicitud.HasValue ?
                new ObjectParameter("id_solicitud", id_solicitud) :
                new ObjectParameter("id_solicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHistoricoSolicitudX_id_Result>("ConsultarHistoricoSolicitudX_id", id_solicitudParameter);
        }
    }
}
