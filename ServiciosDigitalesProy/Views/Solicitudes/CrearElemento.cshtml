@using ServiciosDigitalesProy.Models
@model ServiciosDigitalesProy.Models.Elemento

@{
    ViewBag.Title = "Solicitudes";
    ViewBag.SubSeccion = "Adicionar Elemento";
}

<h3>@ViewBag.SubSeccion</h3>
<div class="col-lg-12">
    <!--breadcrumbs start -->
    <ul class="breadcrumb">
        <li><a href="#"><i class="fa fa-th-list"></i>@ViewBag.Title</a></li>
        <li class="active"><a href="#">@ViewBag.SubSeccion</a></li>
    </ul>
    <!--breadcrumbs end -->
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-8">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Tipo de Elemento :", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.tipoElemento.id, Model.tiposElementoSelect, null, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Categoría de Elemento :", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(x => x.categoriaElemento.id, Model.categoriasElementoSelect, null, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Serial:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.serial, new { htmlAttributes = new { @class = "form-control", @maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.serial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Placa:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.placa, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.placa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Modelo:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.modelo, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.modelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Marca:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.marca, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                @Html.ValidationMessageFor(model => model.marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ram:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.ram, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.ram, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rom:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.rom, new { htmlAttributes = new { @class = "form-control", @maxlength = "15" } })
                @Html.ValidationMessageFor(model => model.rom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Serial Batería:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.serialBateria, new { htmlAttributes = new { @class = "form-control", @maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.serialBateria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sistema Operativo:", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SO, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.SO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-2">
                <input type="submit" id="Aceptar" value="Aceptar" class="btn btn-success" />

            </div>
            <div class="col-md-2">
                @Html.ActionLink("Volver", "VolverDetallesServicio", null, new { @class = "btn btn-primary" })
            </div>
        </div>

    </div>
}

@if ((string)TempData["mensaje"] != null || (string)TempData["mensaje"] != "")
{
    <script>
        $(function (msg) {
            $.bootstrapGrowl('@((string)TempData["mensaje"])', {
                type: '@((string)TempData["estado"])',
                offset: { from: 'top', amount: 100 }
            });
    });
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
