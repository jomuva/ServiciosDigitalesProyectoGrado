//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Persistencia
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class bdServiciosDigitalesProyEntities1 : DbContext
    {
        public bdServiciosDigitalesProyEntities1()
            : base("name=bdServiciosDigitalesProyEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATEGORIA_ELEMENTO> CATEGORIA_ELEMENTO { get; set; }
        public virtual DbSet<CATEGORIA_PRODUCTO> CATEGORIA_PRODUCTO { get; set; }
        public virtual DbSet<DETALLE_FACTURA_PRODUCTO> DETALLE_FACTURA_PRODUCTO { get; set; }
        public virtual DbSet<DETALLE_FACTURA_SOLICITUD> DETALLE_FACTURA_SOLICITUD { get; set; }
        public virtual DbSet<ELEMENTO> ELEMENTO { get; set; }
        public virtual DbSet<ESCALADO> ESCALADO { get; set; }
        public virtual DbSet<ESTADO_FACTURA> ESTADO_FACTURA { get; set; }
        public virtual DbSet<ESTADO_PRODUCTO> ESTADO_PRODUCTO { get; set; }
        public virtual DbSet<ESTADO_SOLICITUD> ESTADO_SOLICITUD { get; set; }
        public virtual DbSet<ESTADO_USUARIO> ESTADO_USUARIO { get; set; }
        public virtual DbSet<FACTURA> FACTURA { get; set; }
        public virtual DbSet<HISTORICO_FACTURA> HISTORICO_FACTURA { get; set; }
        public virtual DbSet<HISTORICO_INVENTARIO> HISTORICO_INVENTARIO { get; set; }
        public virtual DbSet<HISTORICO_INVENTARIO_BAJAS> HISTORICO_INVENTARIO_BAJAS { get; set; }
        public virtual DbSet<HISTORICO_SOLICITUD> HISTORICO_SOLICITUD { get; set; }
        public virtual DbSet<INVENTARIO> INVENTARIO { get; set; }
        public virtual DbSet<INVENTARIO_BAJAS> INVENTARIO_BAJAS { get; set; }
        public virtual DbSet<PERMISO> PERMISO { get; set; }
        public virtual DbSet<PRIORIDAD> PRIORIDAD { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<SERVICIO> SERVICIO { get; set; }
        public virtual DbSet<SOLICITUD> SOLICITUD { get; set; }
        public virtual DbSet<SUCURSAL> SUCURSAL { get; set; }
        public virtual DbSet<TELEFONO_USUARIO> TELEFONO_USUARIO { get; set; }
        public virtual DbSet<TIPO_ELEMENTO> TIPO_ELEMENTO { get; set; }
        public virtual DbSet<TIPO_IDENTIFICACION_USUARIO> TIPO_IDENTIFICACION_USUARIO { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<VALIDAR_USUARIO_LOGUEADO> VALIDAR_USUARIO_LOGUEADO { get; set; }
    
        public virtual int ActualizarEstadoFactura(Nullable<int> idFactura, Nullable<int> idEstado, Nullable<decimal> pago, string identifEmpleado)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var pagoParameter = pago.HasValue ?
                new ObjectParameter("pago", pago) :
                new ObjectParameter("pago", typeof(decimal));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoFactura", idFacturaParameter, idEstadoParameter, pagoParameter, identifEmpleadoParameter);
        }
    
        public virtual int ActualizarEstadoProducto_Automatico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoProducto_Automatico");
        }
    
        public virtual int ActualizarEstadoSolicitud_Automatico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoSolicitud_Automatico");
        }
    
        public virtual int ActualizarFacturaVacia(string identifCliente, string identifEmpleado, Nullable<int> estado, Nullable<int> idFactura, Nullable<decimal> valorPagado, Nullable<decimal> total, Nullable<System.DateTime> fecha)
        {
            var identifClienteParameter = identifCliente != null ?
                new ObjectParameter("identifCliente", identifCliente) :
                new ObjectParameter("identifCliente", typeof(string));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var valorPagadoParameter = valorPagado.HasValue ?
                new ObjectParameter("valorPagado", valorPagado) :
                new ObjectParameter("valorPagado", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarFacturaVacia", identifClienteParameter, identifEmpleadoParameter, estadoParameter, idFacturaParameter, valorPagadoParameter, totalParameter, fechaParameter);
        }
    
        public virtual int ActualizarInventarioProductos(Nullable<int> id_inventario, Nullable<int> id_producto, Nullable<int> cantidad, string identifEmpleado)
        {
            var id_inventarioParameter = id_inventario.HasValue ?
                new ObjectParameter("id_inventario", id_inventario) :
                new ObjectParameter("id_inventario", typeof(int));
    
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarInventarioProductos", id_inventarioParameter, id_productoParameter, cantidadParameter, identifEmpleadoParameter);
        }
    
        public virtual int ActualizarInventarioXVenta(Nullable<int> idProducto, Nullable<int> cantidadVendida, Nullable<System.DateTime> fecha, string identifEmpleado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadVendidaParameter = cantidadVendida.HasValue ?
                new ObjectParameter("cantidadVendida", cantidadVendida) :
                new ObjectParameter("cantidadVendida", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarInventarioXVenta", idProductoParameter, cantidadVendidaParameter, fechaParameter, identifEmpleadoParameter);
        }
    
        public virtual int ActualizarProducto(Nullable<int> idProd, string nombre_prod, Nullable<decimal> precio_costo, Nullable<decimal> precio_venta)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var nombre_prodParameter = nombre_prod != null ?
                new ObjectParameter("nombre_prod", nombre_prod) :
                new ObjectParameter("nombre_prod", typeof(string));
    
            var precio_costoParameter = precio_costo.HasValue ?
                new ObjectParameter("precio_costo", precio_costo) :
                new ObjectParameter("precio_costo", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", idProdParameter, nombre_prodParameter, precio_costoParameter, precio_ventaParameter);
        }
    
        public virtual int ActualizarServicio(Nullable<int> idserv, string descripc, Nullable<decimal> precio)
        {
            var idservParameter = idserv.HasValue ?
                new ObjectParameter("idserv", idserv) :
                new ObjectParameter("idserv", typeof(int));
    
            var descripcParameter = descripc != null ?
                new ObjectParameter("descripc", descripc) :
                new ObjectParameter("descripc", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarServicio", idservParameter, descripcParameter, precioParameter);
        }
    
        public virtual int AgregarAnotacionHistoricoInventario(string identifEmpleado, Nullable<int> idInventario, string descripcion)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("idInventario", idInventario) :
                new ObjectParameter("idInventario", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarAnotacionHistoricoInventario", identifEmpleadoParameter, idInventarioParameter, descripcionParameter);
        }
    
        public virtual int AgregarAnotacionHistoricoInventarioBajas(string identifEmpleado, Nullable<int> idInventario, string descripcion)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("idInventario", idInventario) :
                new ObjectParameter("idInventario", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarAnotacionHistoricoInventarioBajas", identifEmpleadoParameter, idInventarioParameter, descripcionParameter);
        }
    
        public virtual int AgregarAnotacionHistoricoSolicitud(string identifEmpleado, Nullable<int> idSolici, string descripcion)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var idSoliciParameter = idSolici.HasValue ?
                new ObjectParameter("idSolici", idSolici) :
                new ObjectParameter("idSolici", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarAnotacionHistoricoSolicitud", identifEmpleadoParameter, idSoliciParameter, descripcionParameter);
        }
    
        public virtual int AgregarBajaInventario(Nullable<int> idInventario, Nullable<int> cantidadBajas, string identifEmpleado, string descripcionBaja)
        {
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("idInventario", idInventario) :
                new ObjectParameter("idInventario", typeof(int));
    
            var cantidadBajasParameter = cantidadBajas.HasValue ?
                new ObjectParameter("cantidadBajas", cantidadBajas) :
                new ObjectParameter("cantidadBajas", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var descripcionBajaParameter = descripcionBaja != null ?
                new ObjectParameter("descripcionBaja", descripcionBaja) :
                new ObjectParameter("descripcionBaja", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarBajaInventario", idInventarioParameter, cantidadBajasParameter, identifEmpleadoParameter, descripcionBajaParameter);
        }
    
        public virtual int AgregarDetalleFacturaProducto(Nullable<int> idProducto, Nullable<int> cantidad, Nullable<int> idFactura)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarDetalleFacturaProducto", idProductoParameter, cantidadParameter, idFacturaParameter);
        }
    
        public virtual int AgregarDetalleFacturaSolicitud(Nullable<int> idSolicitud, Nullable<int> cantidad, Nullable<int> idFactura)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarDetalleFacturaSolicitud", idSolicitudParameter, cantidadParameter, idFacturaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarElemento(Nullable<int> id_categ, Nullable<int> id_tipo_elem, string serial, string placa, string modelo, string marca, string ram, string rom, string serial_bateria, string sO)
        {
            var id_categParameter = id_categ.HasValue ?
                new ObjectParameter("id_categ", id_categ) :
                new ObjectParameter("id_categ", typeof(int));
    
            var id_tipo_elemParameter = id_tipo_elem.HasValue ?
                new ObjectParameter("id_tipo_elem", id_tipo_elem) :
                new ObjectParameter("id_tipo_elem", typeof(int));
    
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("placa", placa) :
                new ObjectParameter("placa", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("modelo", modelo) :
                new ObjectParameter("modelo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("marca", marca) :
                new ObjectParameter("marca", typeof(string));
    
            var ramParameter = ram != null ?
                new ObjectParameter("ram", ram) :
                new ObjectParameter("ram", typeof(string));
    
            var romParameter = rom != null ?
                new ObjectParameter("rom", rom) :
                new ObjectParameter("rom", typeof(string));
    
            var serial_bateriaParameter = serial_bateria != null ?
                new ObjectParameter("serial_bateria", serial_bateria) :
                new ObjectParameter("serial_bateria", typeof(string));
    
            var sOParameter = sO != null ?
                new ObjectParameter("SO", sO) :
                new ObjectParameter("SO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarElemento", id_categParameter, id_tipo_elemParameter, serialParameter, placaParameter, modeloParameter, marcaParameter, ramParameter, romParameter, serial_bateriaParameter, sOParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarServicio(string descripc, Nullable<decimal> precio)
        {
            var descripcParameter = descripc != null ?
                new ObjectParameter("descripc", descripc) :
                new ObjectParameter("descripc", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarServicio", descripcParameter, precioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AgregarSucursal(string nombre, string direccion, string ciudad, string telefonoFijo, string telefonoCelular)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var telefonoFijoParameter = telefonoFijo != null ?
                new ObjectParameter("telefonoFijo", telefonoFijo) :
                new ObjectParameter("telefonoFijo", typeof(string));
    
            var telefonoCelularParameter = telefonoCelular != null ?
                new ObjectParameter("telefonoCelular", telefonoCelular) :
                new ObjectParameter("telefonoCelular", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AgregarSucursal", nombreParameter, direccionParameter, ciudadParameter, telefonoFijoParameter, telefonoCelularParameter);
        }
    
        public virtual int AgregarUsuario(Nullable<int> tipoIdent, Nullable<int> estado, Nullable<int> rol, string identif, string apellidos, string nombres, string direccion, string correo, string sexo, string username, string passwd, Nullable<int> idSucursal)
        {
            var tipoIdentParameter = tipoIdent.HasValue ?
                new ObjectParameter("tipoIdent", tipoIdent) :
                new ObjectParameter("tipoIdent", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("Passwd", passwd) :
                new ObjectParameter("Passwd", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarUsuario", tipoIdentParameter, estadoParameter, rolParameter, identifParameter, apellidosParameter, nombresParameter, direccionParameter, correoParameter, sexoParameter, usernameParameter, passwdParameter, idSucursalParameter);
        }
    
        public virtual int AnularFactura(Nullable<int> idFactura, string identifEmpleado, string motivoAnulacion)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var motivoAnulacionParameter = motivoAnulacion != null ?
                new ObjectParameter("MotivoAnulacion", motivoAnulacion) :
                new ObjectParameter("MotivoAnulacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AnularFactura", idFacturaParameter, identifEmpleadoParameter, motivoAnulacionParameter);
        }
    
        public virtual int CambiarEstadoLogueoUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoLogueoUser", usernameParameter);
        }
    
        public virtual int CambiarEstadoProducto(Nullable<int> idProd, Nullable<int> idEstado)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEstadoProducto", idProdParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CambiarEstadoSolicitud(Nullable<int> idSolicit, Nullable<int> idEstadoAnterior, Nullable<int> idEstadoNuevo, string identifEmpleado)
        {
            var idSolicitParameter = idSolicit.HasValue ?
                new ObjectParameter("idSolicit", idSolicit) :
                new ObjectParameter("idSolicit", typeof(int));
    
            var idEstadoAnteriorParameter = idEstadoAnterior.HasValue ?
                new ObjectParameter("idEstadoAnterior", idEstadoAnterior) :
                new ObjectParameter("idEstadoAnterior", typeof(int));
    
            var idEstadoNuevoParameter = idEstadoNuevo.HasValue ?
                new ObjectParameter("idEstadoNuevo", idEstadoNuevo) :
                new ObjectParameter("idEstadoNuevo", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CambiarEstadoSolicitud", idSolicitParameter, idEstadoAnteriorParameter, idEstadoNuevoParameter, identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<string> ConsultaNombresEmpleadosXSolicitud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultaNombresEmpleadosXSolicitud");
        }
    
        public virtual ObjectResult<Nullable<int>> Consultar_id_UsuarioXIdentificacion(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Consultar_id_UsuarioXIdentificacion", codigoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarCantidadDeProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarCantidadDeProductos");
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarCantidadProductoXid(Nullable<int> idProd)
        {
            var idProdParameter = idProd.HasValue ?
                new ObjectParameter("idProd", idProd) :
                new ObjectParameter("idProd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarCantidadProductoXid", idProdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarCantidadXProducto(Nullable<int> id_inventario)
        {
            var id_inventarioParameter = id_inventario.HasValue ?
                new ObjectParameter("id_inventario", id_inventario) :
                new ObjectParameter("id_inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarCantidadXProducto", id_inventarioParameter);
        }
    
        public virtual ObjectResult<ConsultarCategorias_Elemento_Result> ConsultarCategorias_Elemento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategorias_Elemento_Result>("ConsultarCategorias_Elemento");
        }
    
        public virtual ObjectResult<ConsultarCategoriasProductos_Result> ConsultarCategoriasProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategoriasProductos_Result>("ConsultarCategoriasProductos");
        }
    
        public virtual ObjectResult<ConsultarDetallesFacturaProducto_Result> ConsultarDetallesFacturaProducto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetallesFacturaProducto_Result>("ConsultarDetallesFacturaProducto");
        }
    
        public virtual ObjectResult<ConsultarDetallesFacturaProductoXid_Result> ConsultarDetallesFacturaProductoXid(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetallesFacturaProductoXid_Result>("ConsultarDetallesFacturaProductoXid", idFacturaParameter);
        }
    
        public virtual ObjectResult<ConsultarDetallesFacturaSolicitudXid_Result> ConsultarDetallesFacturaSolicitudXid(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarDetallesFacturaSolicitudXid_Result>("ConsultarDetallesFacturaSolicitudXid", idFacturaParameter);
        }
    
        public virtual ObjectResult<ConsultarElementos_Result> ConsultarElementos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarElementos_Result>("ConsultarElementos");
        }
    
        public virtual ObjectResult<ConsultarEmpleados_Result> ConsultarEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEmpleados_Result>("ConsultarEmpleados");
        }
    
        public virtual ObjectResult<ConsultarEstado_Solicitud_Result> ConsultarEstado_Solicitud(Nullable<int> idSolic)
        {
            var idSolicParameter = idSolic.HasValue ?
                new ObjectParameter("idSolic", idSolic) :
                new ObjectParameter("idSolic", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstado_Solicitud_Result>("ConsultarEstado_Solicitud", idSolicParameter);
        }
    
        public virtual ObjectResult<ConsultarEstadoFactura_Result> ConsultarEstadoFactura(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstadoFactura_Result>("ConsultarEstadoFactura", idFacturaParameter);
        }
    
        public virtual ObjectResult<string> ConsultarEstadoLogueoUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultarEstadoLogueoUser", usernameParameter);
        }
    
        public virtual ObjectResult<ConsultarEstadosSolicitud_Result> ConsultarEstadosSolicitud()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstadosSolicitud_Result>("ConsultarEstadosSolicitud");
        }
    
        public virtual ObjectResult<ConsultarFacturas_Result> ConsultarFacturas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFacturas_Result>("ConsultarFacturas");
        }
    
        public virtual ObjectResult<ConsultarFacturaXid_Result> ConsultarFacturaXid(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFacturaXid_Result>("ConsultarFacturaXid", idFacturaParameter);
        }
    
        public virtual ObjectResult<ConsultarHistoricoFacturaX_id_Result> ConsultarHistoricoFacturaX_id(Nullable<int> idFactura)
        {
            var idFacturaParameter = idFactura.HasValue ?
                new ObjectParameter("idFactura", idFactura) :
                new ObjectParameter("idFactura", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHistoricoFacturaX_id_Result>("ConsultarHistoricoFacturaX_id", idFacturaParameter);
        }
    
        public virtual ObjectResult<ConsultarHistoricoInventarioBajasX_id_Result> ConsultarHistoricoInventarioBajasX_id(Nullable<int> id_inventario)
        {
            var id_inventarioParameter = id_inventario.HasValue ?
                new ObjectParameter("id_inventario", id_inventario) :
                new ObjectParameter("id_inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHistoricoInventarioBajasX_id_Result>("ConsultarHistoricoInventarioBajasX_id", id_inventarioParameter);
        }
    
        public virtual ObjectResult<ConsultarHistoricoInventarioX_id_Result> ConsultarHistoricoInventarioX_id(Nullable<int> id_inventario)
        {
            var id_inventarioParameter = id_inventario.HasValue ?
                new ObjectParameter("id_inventario", id_inventario) :
                new ObjectParameter("id_inventario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHistoricoInventarioX_id_Result>("ConsultarHistoricoInventarioX_id", id_inventarioParameter);
        }
    
        public virtual ObjectResult<ConsultarHistoricoSolicitudX_id_Result> ConsultarHistoricoSolicitudX_id(Nullable<int> id_solicitud)
        {
            var id_solicitudParameter = id_solicitud.HasValue ?
                new ObjectParameter("id_solicitud", id_solicitud) :
                new ObjectParameter("id_solicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHistoricoSolicitudX_id_Result>("ConsultarHistoricoSolicitudX_id", id_solicitudParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarIdProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarIdProductos");
        }
    
        public virtual ObjectResult<ConsultarInventarioBajas_Result> ConsultarInventarioBajas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInventarioBajas_Result>("ConsultarInventarioBajas");
        }
    
        public virtual ObjectResult<ConsultarInventarios_Result> ConsultarInventarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInventarios_Result>("ConsultarInventarios");
        }
    
        public virtual ObjectResult<ConsultarInventarioXCodigoProducto_Result> ConsultarInventarioXCodigoProducto(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInventarioXCodigoProducto_Result>("ConsultarInventarioXCodigoProducto", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarInventarioXNombreProducto_Result> ConsultarInventarioXNombreProducto(string nombr)
        {
            var nombrParameter = nombr != null ?
                new ObjectParameter("nombr", nombr) :
                new ObjectParameter("nombr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInventarioXNombreProducto_Result>("ConsultarInventarioXNombreProducto", nombrParameter);
        }
    
        public virtual ObjectResult<string> ConsultarNombreSucursalEmpleado(string identifEmpleado)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultarNombreSucursalEmpleado", identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<ConsultarPermisosXUsuario_Result> ConsultarPermisosXUsuario(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPermisosXUsuario_Result>("ConsultarPermisosXUsuario", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarProductoEnTodasLasSucursales_Result> ConsultarProductoEnTodasLasSucursales(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductoEnTodasLasSucursales_Result>("ConsultarProductoEnTodasLasSucursales", idProductoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductos_Result> ConsultarProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductos_Result>("ConsultarProductos");
        }
    
        public virtual ObjectResult<ConsultarProductosXSucursal_Result> ConsultarProductosXSucursal(Nullable<int> idSucursal)
        {
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductosXSucursal_Result>("ConsultarProductosXSucursal", idSucursalParameter);
        }
    
        public virtual ObjectResult<ConsultarProductosXSucursalSegunEmpleado_Result> ConsultarProductosXSucursalSegunEmpleado(string identifEmpleado)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductosXSucursalSegunEmpleado_Result>("ConsultarProductosXSucursalSegunEmpleado", identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductoXCodigo_Result> ConsultarProductoXCodigo(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductoXCodigo_Result>("ConsultarProductoXCodigo", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarProductoXNombre_Result> ConsultarProductoXNombre(string nombr)
        {
            var nombrParameter = nombr != null ?
                new ObjectParameter("nombr", nombr) :
                new ObjectParameter("nombr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductoXNombre_Result>("ConsultarProductoXNombre", nombrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ConsultarRolUsuario(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ConsultarRolUsuario", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarServicio_Result> ConsultarServicio(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarServicio_Result>("ConsultarServicio", codigoParameter);
        }
    
        public virtual ObjectResult<ConsultarServicios_Result> ConsultarServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarServicios_Result>("ConsultarServicios");
        }
    
        public virtual ObjectResult<ConsultarSolicitudes_Result> ConsultarSolicitudes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSolicitudes_Result>("ConsultarSolicitudes");
        }
    
        public virtual ObjectResult<ConsultarSolicitudesXEmpleado_Result> ConsultarSolicitudesXEmpleado(string identif)
        {
            var identifParameter = identif != null ?
                new ObjectParameter("identif", identif) :
                new ObjectParameter("identif", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSolicitudesXEmpleado_Result>("ConsultarSolicitudesXEmpleado", identifParameter);
        }
    
        public virtual ObjectResult<ConsultarSucursales_Result> ConsultarSucursales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSucursales_Result>("ConsultarSucursales");
        }
    
        public virtual ObjectResult<ConsultarSucursalesCompleto_Result> ConsultarSucursalesCompleto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarSucursalesCompleto_Result>("ConsultarSucursalesCompleto");
        }
    
        public virtual ObjectResult<ConsultarTiposElemento_Result> ConsultarTiposElemento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposElemento_Result>("ConsultarTiposElemento");
        }
    
        public virtual ObjectResult<ConsultarTiposPrioridad_Result> ConsultarTiposPrioridad()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposPrioridad_Result>("ConsultarTiposPrioridad");
        }
    
        public virtual ObjectResult<CrearFacturaSinRegistros_Result> CrearFacturaSinRegistros(string identifEmpleado)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrearFacturaSinRegistros_Result>("CrearFacturaSinRegistros", identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CrearInventarioProductoVacioASucursal(Nullable<int> idProducto, Nullable<int> id_sucursal, string identifEmpleado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var id_sucursalParameter = id_sucursal.HasValue ?
                new ObjectParameter("id_sucursal", id_sucursal) :
                new ObjectParameter("id_sucursal", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CrearInventarioProductoVacioASucursal", idProductoParameter, id_sucursalParameter, identifEmpleadoParameter);
        }
    
        public virtual int EscalarSolicitud(Nullable<int> id_solicitud, string identifEmpleado)
        {
            var id_solicitudParameter = id_solicitud.HasValue ?
                new ObjectParameter("id_solicitud", id_solicitud) :
                new ObjectParameter("id_solicitud", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EscalarSolicitud", id_solicitudParameter, identifEmpleadoParameter);
        }
    
        public virtual int GarbageCollector_FacturasSinRegistros_Automatico()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GarbageCollector_FacturasSinRegistros_Automatico");
        }
    
        public virtual int GenerarSolicitud(Nullable<int> id_prioridad, Nullable<int> id_estado, string identifEmpleado, Nullable<int> id_cliente, Nullable<int> id_servicio, Nullable<int> id_elemento, string descripcion)
        {
            var id_prioridadParameter = id_prioridad.HasValue ?
                new ObjectParameter("id_prioridad", id_prioridad) :
                new ObjectParameter("id_prioridad", typeof(int));
    
            var id_estadoParameter = id_estado.HasValue ?
                new ObjectParameter("id_estado", id_estado) :
                new ObjectParameter("id_estado", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var id_servicioParameter = id_servicio.HasValue ?
                new ObjectParameter("id_servicio", id_servicio) :
                new ObjectParameter("id_servicio", typeof(int));
    
            var id_elementoParameter = id_elemento.HasValue ?
                new ObjectParameter("id_elemento", id_elemento) :
                new ObjectParameter("id_elemento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerarSolicitud", id_prioridadParameter, id_estadoParameter, identifEmpleadoParameter, id_clienteParameter, id_servicioParameter, id_elementoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertarProducto(Nullable<int> id_estado_prod, Nullable<int> id_categoria, string nombre_prod, Nullable<decimal> precio_costo, Nullable<decimal> precio_venta, string identifEmpleado, Nullable<int> cantidad, Nullable<int> id_sucursal)
        {
            var id_estado_prodParameter = id_estado_prod.HasValue ?
                new ObjectParameter("id_estado_prod", id_estado_prod) :
                new ObjectParameter("id_estado_prod", typeof(int));
    
            var id_categoriaParameter = id_categoria.HasValue ?
                new ObjectParameter("id_categoria", id_categoria) :
                new ObjectParameter("id_categoria", typeof(int));
    
            var nombre_prodParameter = nombre_prod != null ?
                new ObjectParameter("nombre_prod", nombre_prod) :
                new ObjectParameter("nombre_prod", typeof(string));
    
            var precio_costoParameter = precio_costo.HasValue ?
                new ObjectParameter("precio_costo", precio_costo) :
                new ObjectParameter("precio_costo", typeof(decimal));
    
            var precio_ventaParameter = precio_venta.HasValue ?
                new ObjectParameter("precio_venta", precio_venta) :
                new ObjectParameter("precio_venta", typeof(decimal));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var id_sucursalParameter = id_sucursal.HasValue ?
                new ObjectParameter("id_sucursal", id_sucursal) :
                new ObjectParameter("id_sucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarProducto", id_estado_prodParameter, id_categoriaParameter, nombre_prodParameter, precio_costoParameter, precio_ventaParameter, identifEmpleadoParameter, cantidadParameter, id_sucursalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ObtenerIdUltimaFacturaGenerada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ObtenerIdUltimaFacturaGenerada");
        }
    
        public virtual int TrasladarProductoASucursal(Nullable<int> idInventarioOrigen, Nullable<int> idProducto, Nullable<int> cantidadATrasladar, Nullable<int> idSucursalATrasladar, Nullable<int> idSucursalActual, string identifEmpleado)
        {
            var idInventarioOrigenParameter = idInventarioOrigen.HasValue ?
                new ObjectParameter("idInventarioOrigen", idInventarioOrigen) :
                new ObjectParameter("idInventarioOrigen", typeof(int));
    
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("idProducto", idProducto) :
                new ObjectParameter("idProducto", typeof(int));
    
            var cantidadATrasladarParameter = cantidadATrasladar.HasValue ?
                new ObjectParameter("cantidadATrasladar", cantidadATrasladar) :
                new ObjectParameter("cantidadATrasladar", typeof(int));
    
            var idSucursalATrasladarParameter = idSucursalATrasladar.HasValue ?
                new ObjectParameter("idSucursalATrasladar", idSucursalATrasladar) :
                new ObjectParameter("idSucursalATrasladar", typeof(int));
    
            var idSucursalActualParameter = idSucursalActual.HasValue ?
                new ObjectParameter("idSucursalActual", idSucursalActual) :
                new ObjectParameter("idSucursalActual", typeof(int));
    
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrasladarProductoASucursal", idInventarioOrigenParameter, idProductoParameter, cantidadATrasladarParameter, idSucursalATrasladarParameter, idSucursalActualParameter, identifEmpleadoParameter);
        }
    
        public virtual ObjectResult<string> ValidarAutenticacionLogin(string username, string passwd)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwdParameter = passwd != null ?
                new ObjectParameter("passwd", passwd) :
                new ObjectParameter("passwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidarAutenticacionLogin", usernameParameter, passwdParameter);
        }
    
        public virtual int CambiarEmpleado_de_Sucursal(string identifEmpleado, Nullable<int> idSucursal)
        {
            var identifEmpleadoParameter = identifEmpleado != null ?
                new ObjectParameter("identifEmpleado", identifEmpleado) :
                new ObjectParameter("identifEmpleado", typeof(string));
    
            var idSucursalParameter = idSucursal.HasValue ?
                new ObjectParameter("idSucursal", idSucursal) :
                new ObjectParameter("idSucursal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarEmpleado_de_Sucursal", identifEmpleadoParameter, idSucursalParameter);
        }
    
        public virtual ObjectResult<string> ConsultarEstadoEmpleadoX_Username(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ConsultarEstadoEmpleadoX_Username", usernameParameter);
        }
    }
}
