@using ServiciosDigitalesProy.Models
@model ServiciosDigitalesProy.Models.Inventario

@{
    ViewBag.Title = "Productos";
    ViewBag.SubSeccion = "Adicionar Producto";
}

<h3>@ViewBag.SubSeccion</h3>
<div class="col-lg-12">
    <!--breadcrumbs start -->
    <ul class="breadcrumb">
        <li><a href="#"><i class="fa fa-th-list"></i>@ViewBag.Title</a></li>
        <li class="active"><a href="#">@ViewBag.SubSeccion</a></li>
    </ul>
    <!--breadcrumbs end -->
</div>

@using (Html.BeginForm("InsertarProducto", "Productos"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Nombre :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.producto.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.producto.nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Categoría :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">

                @Html.DropDownListFor(x => x.producto.categoria.id, Model.producto.categoriasProductoSelect, null, new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Precio Costo :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.producto.precio_costo, new { htmlAttributes = new { @class = "form-control", @type = "number"} })
                @Html.ValidationMessageFor(model => model.producto.precio_costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Precio Venta :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.producto.precio_venta, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.producto.precio_venta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Cantidad :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.cantidadExistencias, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.cantidadExistencias, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Estado :*", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
               
                    @Html.DropDownListFor(x => x.producto.id_estado, Model.producto.estadosProducto, null  , new { @class = "form-control" })
                    
            </div>
        </div>

      
        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" id="Aceptar" value="Aceptar" class="btn btn-success" />

            </div>
            @*<div class="col-md-2">
                @Html.ActionLink("Volver", "VolverDetallesCliente", new { id = Model.identificacion }, new { @class = "btn btn-primary" })
            </div>*@
        </div>

    </div>
}

@if ((string)TempData["mensaje"] != null || (string)TempData["mensaje"] != "")
{
    <script>
        $(function (msg) {
            $.bootstrapGrowl('@((string)TempData["mensaje"])', {
                type: '@((string)TempData["estado"])',
                offset: { from: 'top', amount: 100 }
            });
    });
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
